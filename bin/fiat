#!/usr/bin/env ruby

$LOAD_PATH.unshift File.dirname(__FILE__) + '/../lib'
require 'fiat'

# Default values
instruction = "test"
failure_terms = ["failed", "error"]
poll_interval = 0.5 # seconds

# Overwrite the defaults if there's a .fiatrc in this directory
if File.exists? ".fiatrc"
  eval File.open(".fiatrc").read
end

# Overwrite the instruction if one's given on the cmd line
instruction = ARGV.length == 1 ? ARGV[0] : instruction

unless File.exists? "Makefile"
  $stderr.puts "Can't run without a Makefile!"
  exit false
end

unless Fiat::dep_tree.include? instruction
  $stderr.puts "Can't find \"make #{instruction}\" in Makefile! Aborting."
  exit false
end

puts "Running \"make #{instruction}\" on changes..."

dependencies = Fiat::deps(instruction, Fiat::dep_tree)
ctimes = Fiat::file_ctimes(dependencies)

# Initial test run
Fiat::run_tests(dependencies, ctimes, instruction, failure_terms)

# Main loop
begin
  while true
    if Fiat::anything_changed?(dependencies, ctimes)
      Fiat::run_tests(dependencies, ctimes, instruction, failure_terms)
      ctimes = Fiat::file_ctimes(dependencies)
    end
    sleep poll_interval
  end
rescue SystemExit, Interrupt
  puts "\nShutting down..."
end
